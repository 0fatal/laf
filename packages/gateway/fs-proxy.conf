lua_shared_dict domain_cache 128m;
proxy_cache_path /tmp/cache levels=1:2 keys_zone=file_cache:10m max_size=10g inactive=60m;

# for user custom domain
server {
   listen 80 default_server;
   server_name _;

   gzip on;
   gzip_min_length 1k;
   gzip_buffers 4 16k;
   gzip_http_version 1.0;
   gzip_comp_level 2;
   gzip_types text/plain application/x-javascript text/css application/xml;

   location / {
      lua_code_cache off;
      set $userdomain default;
      access_by_lua_block {
         local host = ngx.var.host;
         local domain_cache = ngx.shared.domain_cache;
         # domain_cache:set(host, 'storage_service:9010/abed2f85-00ac-49c0-978d-c83aa3c1d8e8_public')
         local value = domain_cache:get(host);
         if value then
         ngx.var.userdomain = value;
         return
         end

         if not value then
         ngx.say('failed to proxy this domain');
         return
         end

      }

      resolver 127.0.0.11;

      #proxy
      proxy_ignore_headers Set-Cookie Cache-Control;
      proxy_hide_header Cache-Control;
      proxy_hide_header Set-Cookie;
      proxy_cache file_cache;
      proxy_cache_valid 200 304 60m;
      proxy_cache_valid any 5m;
      proxy_cache_revalidate on;
      proxy_cache_min_uses 3;
      proxy_cache_methods GET;
      proxy_cache_key key=$host$uri;
      add_header Nginx-Cache "$upstream_cache_status";
      add_header X-Accept "$http_accept";
      add_header cache-key "key=$host$uri";
      proxy_pass http://$userdomain?path=$request_uri&$query_string;
      proxy_set_header Host $userdomain;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # Logging
      log_by_lua_block {
         ngx.log(ngx.ERR, '<proxy domain>', ngx.var.userdomain)
      }
   }
}