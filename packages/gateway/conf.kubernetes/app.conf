
# for app service
server {
   listen 80;
   server_name ${DEPLOY_DOMAIN};
   client_max_body_size 0;
   
   resolver kube-dns.kube-system.svc.cluster.local valid=10s;

   location / {
      # Allow CORS
      add_header Access-Control-Allow-Origin * always;
      add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,PATCH,OPTIONS always;
      add_header Access-Control-Allow-Headers * always;
      add_header Access-Control-Expose-Headers * always;
      add_header Access-Control-Max-Age 3600 always;

      if ($request_method = 'OPTIONS') {
         return 204;
      }

       # Resolve app service
      if ($host ~* "(\w{8}(-\w{4}){3}-\w{12})\.(.+)$") {
         set $appid $1;
         set $service_id app-$appid;
      }

      proxy_pass http://$service_id.laf.svc.cluster.local:8000;
      add_header appid $appid;
      proxy_read_timeout 600s;
      proxy_set_header Host $host;
      proxy_http_version 1.1;

      # Upgrade websocket
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";


      # Logging
      log_by_lua_block {
         ngx.log(ngx.ERR, ngx.var.appid, ',', ngx.var.service_id, ',', ngx.var.request_uri, ',')
      }
   }

   location /file {
      # Allow CORS
      add_header Access-Control-Allow-Origin * always;
      add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,PATCH,OPTIONS always;
      add_header Access-Control-Allow-Headers * always;
      add_header Access-Control-Expose-Headers * always;
      add_header Access-Control-Max-Age 3600 always;


      if ($request_method = 'OPTIONS') {
         return 204;
      }

      # Resolve app service
      if ($host ~* "(\w{8}(-\w{4}){3}-\w{12})\.(.+)$") {
         set $appid $1;
      }

      if ($uri ~* "/file/([\w|\d]{1,32})/(.*)$") {
         set $tmp _$1;
         set $bucket $appid$tmp;
         set $proxy_uri $bucket?path=/$2&$query_string;
      }

      # just for `/bucket` (no `/` in ends)
      if ($uri ~* "/file/([\w|\d]{1,32})$") {
         set $tmp _$1;
         set $bucket $appid$tmp;
         set $proxy_uri $bucket?path=/&$query_string;
      }

      if ($uri ~* "/file/([\w|\d]{1,32})/dir$") {
         set $tmp _$1;
         set $bucket $appid$tmp;
         set $proxy_uri $bucket/dir$is_args$query_string;
      }

      proxy_pass http://storage-service:9010/$proxy_uri;
      add_header appid $appid;
      add_header bucket $bucket;
      proxy_read_timeout 600s;
      proxy_set_header Host $host;

      # Logging
      log_by_lua_block {
         ngx.log(ngx.ERR, ngx.var.appid, '<storage service>', ngx.var.bucket)
      }
   }

   location /deploy/incoming {
      # Allow CORS
      add_header Access-Control-Allow-Origin * always;
      add_header Access-Control-Allow-Methods GET,POST,PUT,DELETE,PATCH,OPTIONS always;
      add_header Access-Control-Allow-Headers * always;
      add_header Access-Control-Expose-Headers * always;
      add_header Access-Control-Max-Age 3600 always;

      if ($request_method = 'OPTIONS') {
         return 204;
      }
       
      if ($host ~* "(\w{8}(-\w{4}){3}-\w{12})\.(.+)$") {
         set $appid $1;
      }

      proxy_pass http://system-server:9000/apps/$appid/deploy/incoming;
      add_header appid $appid;
      proxy_set_header Host $host;
      proxy_http_version 1.1;
      proxy_send_timeout 600s;
      proxy_read_timeout 600s;
   }
}