
# for system client & server
server {
  listen 80;
  server_name localhost ${SYS_CLIENT_HOST};
  client_max_body_size 0;

  location / {
    root /app;
    index index.html index.htm;
  }

  location /app-console/ {
    alias /app-console/;
    index index.html index.htm;
  }

  location /sys-api/ {
    resolver kube-dns.kube-system.svc.cluster.local valid=10s;

    # use var to force nginx resolve domain through DNS resolver;
    # to prevent nginx from just resolving service once in starting;
    set $service_name "system-server";

    if ($uri ~* "/sys-api/(.*)$") {
      set $proxy_uri $1$is_args$query_string;
    }

    proxy_pass http://$service_name.laf.svc.cluster.local:9000/$proxy_uri;
  }

  location /sys-extension-api/ {
      # resolve app service
      resolver kube-dns.kube-system.svc.cluster.local valid=10s;

      set $appid "00000000-0000-0000-0000-000000000000";
      set $service_id app-$appid;

       if ($uri ~* "/sys-extension-api/(.*)$") {
         set $proxy_uri $1$is_args$query_string;
      }

      proxy_pass http://$service_id.laf.svc.cluster.local:8000/$proxy_uri;
      proxy_send_timeout 600s;
      proxy_read_timeout 600s;

      # Upgrade websocket
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
  }
}


# for docs
server {
  listen 80;
  server_name localhost ${DOCS_HOST};
  client_max_body_size 0;

  root /docs;
  location / {
    index index.html index.htm;
  }
}